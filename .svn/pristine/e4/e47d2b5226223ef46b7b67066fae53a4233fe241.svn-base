var app = getApp();
import util from "../../../utils/util.js"
var setIntervalTime = null;//时间定时器
var bmap = require('../../../libs/bmap-wx.min.js');
Page({

  /**
   * 页面的初始数据
   */
  data: {
    startTime: util.formatTime(new Date()),                  //时间控件开始吧时间
    today: util.formatTime(new Date()),                      //当前时间
    diaryType:1,                                            //1:我收到的   0：我发出的
    currentTime: util.formatTime(new Date(), true, true),    //当前时间
    showClock:true,                                          //是否显示打卡按钮
    teamEndTime: util.formatTime(new Date()),                //团队考勤结束时间
    teamStartTime: util.formatTime(new Date()),              //团队考勤开始时间
    address:'',                                              //当前地址
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    let that = this;
    that.setTime();
    that.getAddress()
  },
  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },
  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {
    let that = this;
    clearInterval(that.setIntervalTime)
  },
  //选择日期
  chooseDate(e) {
    let dateType = e.target.dataset.datetype;
    if (new Date(e.detail.value).getTime() == new Date(this.data.today).getTime()){
      this.setData({
        showClock:true
      })
    }else{
      this.setData({
        showClock: false
      })
    }
    this.setData({
      startTime: e.detail.value,
    })
  },
  //团队考勤选择时间
  teamChooseDate(e){
    let dateType = e.target.dataset.datetype;
    if (dateType == 1) {  //开始时间
      this.setData({
        teamStartTime: e.detail.value,
      })
    } else {
      if (this.compareDate(this.data.teamStartTime, e.detail.value)) {
        wx.showToast({
          title: '结束时间不能小于开始时间',
          icon: 'none',
          duration: 2000
        })
        return;
      }
      this.setData({
        teamEndTime: e.detail.value,
        currentPage: 1
      })
    }
  },
  //改变类型  1：我的考勤 0：团队考勤
  changeType(e) {
    //console.log(e.currentTarget.dataset.type, 7766)
    this.setData({
      diaryType: e.currentTarget.dataset.type
    })
    if (e.currentTarget.dataset.type == 0){
      //console.log(8888888)
      clearInterval(this.setIntervalTime)
    }else{
      //console.log(6666666666666)
      this.setTime()
    }
  },
  //时间的倒计时
  setTime(){
    let that = this;
    that.setIntervalTime = setInterval(function () {
      console.log(333)
      that.setData({
        currentTime: util.formatTime(new Date(), true, true),
      })
    }, 1000)
  },
  //取消时间控件的选择
  cancleDate(){

  },
  // 两个日期进行比较
  compareDate(date1, date2) {
    var oDate1 = new Date(date1);
    var oDate2 = new Date(date2);
    if (oDate1.getTime() > oDate2.getTime()) {
      return true;
    } else {
      return false;
    }
  },
  getAddress(){
    let that = this;
    var BMap = new bmap.BMapWX({
      ak: '2iUe0mxDF8B0997GLkGLrnGtvuCftAUl',
    });

    // 获取我的当前位置 失败
    var myfail = function (data) {
      console.log(data)
    };
    // 获取我的当前位置 成功
    var mysuccess = function (data) {
      that.setData({
        mywxMarkerData: data.wxMarkerData,
        address: data.wxMarkerData[0].address
      })
      console.log(data)
      //mapInfo.concat(data.wxMarkerData)
    }
    BMap.regeocoding({
      fail: myfail,
      success: mysuccess,
    });
  }
})