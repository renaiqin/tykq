var app = getApp();
import formatTime from "../../../../utils/util.js"
Page({

  /**
   * 页面的初始数据
   */
  data: {
    typeList: [],//设备类型
    typeIndex: 0,//设备类型下标
    xhList: [],//设备型号
    xhIndex: 0,//设备型号下标
    schoolCode: '',//学校代码
    schoolname: '',//学校名称
    detail:false, //是否是详情
    //连接方式
    connecList: [{
      value: 1,
      name: 'GPRS2G'
    }, {
      value: 2,
      name: '移动4G'
    }, {
      value: 3,
      name: '联通4G'
    }, {
      value: 4,
      name: '电信4G'
    }, {
      value: 5,
      name: '学校无线'
    }, {
      value: 6,
      name: '学校有线'
    }, {
      value: 7,
      name: '专线'
    }],
    connecIndex: 0,//连接方式下标
    //巡更功能数组
    xgList: [{
      value: 0,
      name: '停用'
    }, {
      value: 1,
      name: '启用'
    }],
    xgIndex: 0,//巡更功能下标
    kqjList: [{
      value: 0,
      name: '接触式刷卡考勤机'
    }, {
      value: 1,
      name: '远距离考勤机'
    }, {
      value: 2,
      name: '非考勤机'
    }],
    kqjIndex: 0,
    deviceDetail:{}
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    this.setData({
      schoolCode: options.schoolcode,
      schoolname: options.schoolname,
      detail:options.type == '1' ? true : false,
      kqjid: options.kqjid
    })
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
    Promise.all([this.GetEquipmentTypeList()]).then(()=>{
      this.GetSchoolEquipment();
      
    })
   
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {

  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function () {

  },
  //设备类型
  bindPickerChange: function (e) {
    console.log('picker发送选择改变，携带值为', e.detail.value)
    this.setData({
      typeIndex: e.detail.value
    })
  },
  //时间
  bindDateChange(e) {
    console.log(e.target.dataset.type, e.detail.value)
    var key = e.target.dataset.type;
    this.setData({
      ['deviceDetail.'+key]: e.detail.value
    })
  },
  //获取设备信息详情
  GetSchoolEquipment(){
    app.device.GetSchoolEquipment({ kqjid: this.data.kqjid }).then(res=>{
      this.setData({
        deviceDetail: res.Value,
        typeIndex: this.data.typeList.findIndex(i=>{
          return i.TypeCode == res.Value.TypeId
        }),
        connecIndex: this.data.connecList.findIndex(i => {
          return i.value == res.Value.ConnectType 
        }),
        xgIndex: this.data.xgList.findIndex(i => {
          return i.value == res.Value.Xuegeng
        }), 
        kqjIndex: this.data.kqjList.findIndex(i => {
          return i.value == res.Value.kqjFlag
        }),
        azDate: res.Value.InstallTimeStr,
        dqdate: res.Value.WarrantyEndTimeStr,
      })
      this.GetUnitTypeList();
    })
  },
  //获取设备类型
  GetEquipmentTypeList() {
    app.device.GetEquipmentTypeList().then(res => {
      const { ResultCode, Value, ResultMessage } = res;
      if (ResultCode == 1) {
        this.setData({
          typeList: Value
        })
      } else {
        wx.showToast({
          title: ResultMessage,
          icon: 'none',
          duration: 2000
        })
      }
    })
  },
  //获取设备型号
  GetUnitTypeList() {
    let { typeList, typeIndex} = this.data
    app.device.GetUnitTypeList({TypeId: typeList[typeIndex].TypeCode}).then(res => {
      const { ResultCode, Value, ResultMessage } = res;
      if (ResultCode == 1) {
        this.setData({
          xhList: Value,
          xhIndex: Value.findIndex(i => {
            return i.UnitType == this.data.deviceDetail.UnitType
          }),
        })
      } else {
        wx.showToast({
          title: ResultMessage,
          icon: 'none',
          duration: 2000
        })
      }
    })
  },
  //设备类型值改变
  bindPickerChangeType(e) {
    this.setData({
      typeIndex: e.detail.value
    })
    this.GetUnitTypeList();
  },
  //设备型号值改变
  bindPickerChangeXh(e) {
    this.setData({
      xhIndex: e.detail.value
    })
  },
  //连接方式值改变
  bindPickerChangeLj(e) {
    this.setData({
      connecIndex: e.detail.value
    })
  },
  //考勤机值改变
  bindPickerChangeKqj(e) {
    this.setData({
      kqjIndex: e.detail.value
    })
  },
  //巡更值改变
  bindPickerChangeXg(e) {
    this.setData({
      xgIndex: e.detail.value
    })
  },
  //input 值改变
  bindInput(e){
    var key = e.target.dataset.value;
    this.setData({
      ['deviceDetail.'+key]: e.detail.value
    })
  },
  //修改学校设备
  submit(){
    let { deviceDetail} = this.data
    console.log(deviceDetail)
    if (this.data.typeList.length == 0) {
      wx.showToast({
        title: '设备类型不能为空',
        icon: 'none',
        duration: 2000
      })
      return;
    }
    if (this.data.xhList.length == 0) {
      wx.showToast({
        title: '设备型号不能为空',
        icon: 'none',
        duration: 2000
      })
      return;
    }
    if (deviceDetail.DeviceSerial == '') {
      wx.showToast({
        title: '视频设备序列号不能为空',
        icon: 'none',
        duration: 2000
      })
      return;
    }
    if (deviceDetail.DeviceSerialKQJ == '') {
      wx.showToast({
        title: '考勤设备序列号不能为空',
        icon: 'none',
        duration: 2000
      })
      return;
    }
    if (deviceDetail.IPAddress == '') {
      wx.showToast({
        title: '设备ip不能为空',
        icon: 'none',
        duration: 2000
      })
      return;
    }
    if (deviceDetail.SIMtel == '') {
      wx.showToast({
        title: 'sim卡号不能为空',
        icon: 'none',
        duration: 2000
      })
      return;
    }
    if (deviceDetail.bdtel == '') {
      wx.showToast({
        title: '通知号码10分钟不能为空',
        icon: 'none',
        duration: 2000
      })
      return;
    }

    let params = {
      kqjid: deviceDetail.kqjid,
      School: this.data.schoolCode,
      TypeId: this.data.typeList[this.data.typeIndex].TypeCode,
      UnitType: this.data.xhList[this.data.xhIndex].UnitType,
      DeviceSerial: deviceDetail.DeviceSerial,
      DeviceSerialKQJ: deviceDetail.DeviceSerialKQJ,
      SIMtel: deviceDetail.SIMtel,
      bdtel: deviceDetail.bdtel,
      bdtel2: deviceDetail.bdtel2 == 'null' ? '' : deviceDetail.bdtel2,
      bdtel3: deviceDetail.bdtel3 == 'null' ? '' : deviceDetail.bdtel3,
      bdtel4: deviceDetail.bdtel4 == 'null' ? '' : deviceDetail.bdtel4,
      bdtel5: deviceDetail.bdtel5 == 'null' ? '' : deviceDetail.bdtel5,
      bdtel6: deviceDetail.bdtel6 == 'null' ? '' : deviceDetail.bdtel6,
      azPlace: deviceDetail.azPlace == 'null' ? '' : deviceDetail.azPlace,
      Xuegeng: this.data.xgList[this.data.xgIndex].value,
      kqjFlag: this.data.kqjList[this.data.kqjIndex].value,
      ConnectType: this.data.connecList[this.data.connecIndex].value,
      IPAddress: deviceDetail.IPAddress,
      WarrantyEndTime: deviceDetail.WarrantyEndTimeStr,
      InstallTime: deviceDetail.InstallTimeStr
    }
    app.device.UpdateSchoolEquipment(params).then(res=>{
      const { ResultCode, Value, ResultMessage } = res;
      if (ResultCode != 1) {
        wx.showToast({
          title: ResultMessage,
          icon: 'none',
          duration: 2000
        })
        return;
      } else {
        wx.navigateBack({
          delta: 1
        })
      }
    })
  }
})