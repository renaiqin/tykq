// pages/orderForm/orderFormAdd/orderFormAdd.js
import formatTime from "../../../utils/util.js"
var app = getApp();

Page({

  /**
   * 页面的初始数据
   */
  data: {
    School: '', // 学校编号
    SchoolId: '', // 第三方学校id
    SchoolName: '', //学校名称
    HTBH: '', //合同编号
    SJBH: '', // 商机编号
    SJList: [], // 商机列表
    HTList: [], // 合同列表
    DDBH: '', // 订单编号
    DDList: [], // 订单列表
    BalanceWayEnum: [], // 结算方式
    DDName: '', // 项目名称
    PartyA: '', // 甲方
    PartyB: '杭州天音', // 乙方
    Area: '', // 客户地区
    LinkWay: '', // 客户联系方式
    NeedsTime: formatTime.formatTime(new Date(new Date().getTime() - 30*24*60*60*1000)), // 需求时间
    SignTime: formatTime.formatTime(new Date()), // 签订日期
    StartFeeDate: formatTime.formatTime(new Date(new Date().getTime() + 2 * 30 * 24 * 60 * 60 * 1000)), // 学校开始计费时间
    GetBackPayPeriod: 8, // 投入回收期（个月）1位小数
    FBAmount: 0, // 投入总成本（元）
    RBAmount: 0, // 实际结算金额（元）
    AskforBz: '', // 申请说明
    Bz: '', // 备注
    ReceiveMan: '', // 收货人
    ReceiveTel: '', // 收货人电话
    ReceiveAddress: '', // 收货地址
    SpLcId: '', // 审批流程id
    SpLcList: [], // 审批流程列表
    SprUsername: '', // 审批人Code
    SprUserList: [], // 审批人列表
    ifAgent: 1, // 是否代理递交,是否是登记方式？？？？？
    InputUsername: '', // 所属人Code
    InputMan: '', // 所属人
    InputManList: [], // 所属人列表
    AgentMan: '', // 代理人
    keyInfo: { key1: 0, key2: 0, key3: 0, key4: 0, key5: 0, }, // 用来纪录每个下拉框选中的索引
    multiIndex: [0, 0],
    multiArray: [[], []], // 用来存放产品类型，产品列表的二维数组
    ProductTypeList: [], // 存放产品类型
    ProductList: [], // 存放产品列表
    AddPList: [], // 存放选择的产品列表
    PTypeId: '', // 产品分类Id
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {
    
  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
    this.getSjList(); // 获取商机列表
    this.getContractListBySelect(); // 搜索所需的合同列表
    this.getBusinessNum(); // 获取商机编号
    //this.getOrderAuditSet(); // 审核流程列表
    this.getOrderAuditUser(); // 获取审批人
    this.getDictionary('BalanceWayEnum'); // 获取结算方式
    this.getProductTypeList(); // 获取产品类型
  },

  // 获取商机列表
  getSjList: function (page, type) {
    var { SJList, } = this.data;
    app.wxApi.BusinessListBySelect({ School: this.data.School, }).then(res => {
      var { Value, ResultMessage, ResultCode, } = res;
      var list = [{name:'请选择'}];
      if (ResultCode == 1) {
        for (let i = 0; i < Value.length; i++){
          list.push({
            name: Value[i].SJName,
            SJBH: Value[i].SJBH,
          })
        }
        this.setData({
          SJList: list
        })
      } else {
        this.showToast(ResultMessage);
      }
    })
  },

  //搜索所需的合同列表
  getContractListBySelect: function () {
    app.wxApi.ContractListBySelect({ School: this.data.School, }).then(res => {
      var { Value, ResultMessage, ResultCode, } = res;
      var list = [{ name: '请选择' }];
      if (ResultCode == 1) {
        for (let i = 0; i < Value.length; i++) {
          list.push({
            name: Value[i].HTTitle,
            HTBH: Value[i].HTBH,
          })
        }
        this.setData({
          HTList: list
        })
      } else {
        this.showToast(ResultMessage);
      }
    })
  },

  // 获取订单编号
  getBusinessNum: function () {
    app.wxApi.GetBusinessNum().then(res => {
      var { Value, ResultMessage, ResultCode, } = res;
      if (ResultCode == 1) {
        this.setData({ DDBH: Value, });
      } else {
        this.showToast(ResultMessage);
      }
    })
  },

  // 获取可枚举的属性
  getDictionary: function (key) {
    app.wxApi.GetDictionary({ key, }).then(res => {
      var { Value, ResultMessage, ResultCode, } = res;
      if (ResultCode == 1) {
        Value.unshift({ Des: '请选择', Value: 0 })
        this.setData({ [key]: Value, });
      } else {
        this.showToast(ResultMessage);
      }
    })
  },

  //获取订单审批流程
  getOrderAuditSet: function () {
    app.wxApi.OrderAuditSet().then(res => {
      var { Value, ResultMessage, ResultCode, } = res;
      var list = [{ name: '请选择' }];
      if (ResultCode == 1) {
        for (let i = 0; i < Value.length; i++) {
          list.push({
            SpLcId: Value[i].SpLcId,
          })
        }
        this.setData({ SpLcList: list })
      } else {
        this.showToast(ResultMessage);
      }
    })
  },

  //获取审批人
  getOrderAuditUser: function () {
    app.wxApi.GetOrderAuditUser().then(res => {
      var { Value, ResultMessage, ResultCode, } = res;
      var list = [{ name: '请选择' }];
      if (ResultCode == 1) {
        for (let i = 0; i < Value.length; i++) {
          list.push({
            name: Value[i].Name,
            Code: Value[i].Code,
          })
        }
        this.setData({ SprUserList: list })
      } else {
        this.showToast(ResultMessage);
      }
    })
  },

  // input键盘输入时触发
  bindInput: function (e) {
    var key = e.target.dataset.value,
      value = e.detail.value;
    this.setData({
      [key]: value,
    })
  },

  // 验证学校是否存在
  verifySchool: function (e) {
    var { School } = this.data;
    if (!School) {
      this.showToast('请输入学校编号');
      return;
    }
    app.wxApi.VerifySchool({ SchoolCode: School }).then(res => {
      var { Value, ResultMessage, ResultCode, } = res;
      if (ResultCode == 1) {
        if (res.Value) {
          this.setData({ SchoolName: ResultMessage });
          return;
        }
        this.showToast(ResultMessage);
      } else {
        this.showToast(ResultMessage);
      }
    })
  },

  // 登记方式 radio
  radioChange: function (e) {
    this.setData({
      ifAgent: e.detail.value,
    })
  },

  // 选中下拉框
  bindPickerChange: function (e) {
    var newKeyInfo = this.data.keyInfo;
    var key = parseInt(e.detail.value);
    var target = {
      'SJList': () => {
        newKeyInfo['key1'] = key;
        return newKeyInfo;
      },
      'HTList': () => {
        newKeyInfo['key2'] = key;
        return newKeyInfo;
      },
      'BalanceWayEnum': () => {
        newKeyInfo['key3'] = key;
        return newKeyInfo;
      },
      'SpLcList': () => {
        newKeyInfo['key4'] = key;
        return newKeyInfo;
      },
      'SprUserList': () => {
        newKeyInfo['key5'] = key;
        return newKeyInfo;
      },
      'InputManList': () => {
        newKeyInfo['key6'] = key;
        return newKeyInfo;
      },
    }
    var info = target[e.target.dataset.type]();
    this.setData({
      keyInfo: info,
    })
  },

  // 选择日期
  chooseDate: function (e) {
    var { key } = e.currentTarget.dataset;
    this.setData({
      [key]: e.detail.value,
    })
  },
  cancleDate: function () {
    console.log(2)
  },

  /**
   * 选择产品相关start
   */

  //获取产品类型
  getProductTypeList: function () {
    var { multiIndex, multiArray, } = this.data;
    var list = multiArray;
    app.wxApi.ProductTypeList().then(res => {
      var { Value, ResultMessage, ResultCode, } = res;
      if (ResultCode == 1) {
        list[multiIndex[0]].unshift('请选择')
        for (let i = 0; i < Value.length; i++) {
          list[multiIndex[0]].push(Value[i].SmallName)
        }
        this.setData({
          multiArray: list,
          ProductTypeList: Value,
        })
      } else {
        this.showToast(ResultMessage);
      }
    })
  },

  //获取产品列表
  getProductList: function (PTypeId, value) {
    var { multiArray, multiIndex, ProductList, } = this.data;
    var data = {
      multiArray,
      multiIndex,
      ProductList,
    };
    var list = [];
    app.wxApi.ProductList({ PTypeId, }).then(res => {
      var { Value, ResultMessage, ResultCode, } = res;
      if (ResultCode == 1) {
        list = Value.length > 0 ? [] : ["暂无产品"];
        for (let i = 0; i < Value.length; i++) {
          list.push(Value[i].PName);
        }
        data.multiIndex[0] = value;
        data.multiArray[1] = list;
        data.ProductList = Value;
        this.setData(data);
      } else {
        this.showToast(ResultMessage);
      }
    })
  },

  bindMultiPickerChange: function (e) {
    console.log('picker发送选择改变，携带值为', e.detail.value)
    var { multiArray, multiIndex, ProductList, AddPList, PTypeId, } = this.data;
    if (ProductList.length == 0) return;
    var list = AddPList;
    var PList = ProductList[e.detail.value[1]];
    list.push({
      PTypeId,
      PId: PList.Id,
      PName: PList.PName,
      PModel: PList.PList,
      PUnit: PList.PUnit,
      PPrice: PList.PPrice,
      Pnum: '',
      Payment: '',
      GuaPeriod: PList.GuaPeriod,
      Bz: '',
      key: 0,
      BalanceWay: 0,
    })
    this.setData({
      multiIndex: e.detail.value,
      AddPList: list,
    })
  },

  bindMultiPickerColumnChange: function (e) {
    console.log('修改的列为', e.detail.column, '，值为', e.detail.value);
    var { ProductTypeList, } = this.data;
    var PTypeId = ProductTypeList[e.detail.value - 1].Id;
    this.setData({
      PTypeId,
    })
    this.getProductList(PTypeId, e.detail.value);
  },

  bindProductChange: function (e) {
    var value = parseInt(e.detail.value),
        { key } = e.currentTarget.dataset,
        product = this.data.AddPList;
    product[key].key = value;
    product[key].BalanceWay = this.data.BalanceWayEnum[value].Value;
    this.setData({
      AddPList: product,
    })
  },

  bindProduct: function (e) {
    var { key, value } = e.currentTarget.dataset;
    var newList = this.data.AddPList;
    newList[key][value] = e.detail.value;
    this.setData({
      AddPList: newList,
    })
  },

  delProduct: function (e) {
    var product = this.data.ProductList,
        { key } = e.currentTarget.dataset;
    product.splice(key,1);
    this.setData({ ProductList: product })
  },

  /**
   * 选择产品相关end
   */

  // 提交订单
  formSubmit: function (e) {
    var {
      School, SchoolName,
      HTBH, SJBH, DDBH, HTList, SJList,
      DDName, keyInfo, AddPList,
      PartyA, PartyB,
      Area, LinkWay, SprUserList,
      NeedsTime, SignTime, BalanceWayEnum,
      StartFeeDate, GetBackPayPeriod,
      FBAmount, RBAmount, AskforBz,
      Bz, ReceiveMan, ReceiveTel, Spr,
      ReceiveAddress, SpLcId, SprUsername,
    } = this.data;
    if (!DDBH) {
      this.showToast('请输入订单编号');
      return;
    }
    if (DDName == '') {
      this.showToast('请输入项目名称');
      return;
    }
    if (PartyA == '') {
      this.showToast('请输入甲方名称');
      return;
    }
    if (PartyB == '') {
      this.showToast('请输入乙方名称');
      return;
    }
    if (GetBackPayPeriod == '') {
      this.showToast('投入回收期不能为空');
      return;
    }
    if (RBAmount == '') {
      this.showToast('结算金额不能为空');
      return;
    }
    let info = {
      School,SchoolName,
      HTBH: HTList[keyInfo.key2].HTBH,
      SJBH: SJList[keyInfo.key1].SJBH,
      DDBH, DDName,
      BalanceWay: BalanceWayEnum[keyInfo.key3].Value,
      PartyA,PartyB,Area,LinkWay, NeedsTime,SignTime,
      StartFeeDate,GetBackPayPeriod, FBAmount, RBAmount,
      AskforBz,Bz, ReceiveMan,ReceiveTel,ReceiveAddress,
      ProductList: AddPList,
      SprUsername: SprUserList[keyInfo.key5].Code,
      Spr: SprUserList[keyInfo.key5].name,
    };
    app.wxApi.AddBusiness(info).then(res => {
      var { ResultMessage, ResultCode, } = res;
      this.showToast(ResultMessage);
      if (ResultCode == 1) {
        // wx.setStorageSync("sjAddOrEdit", true);
        // setTimeout(() => {
        //   wx.navigateBack();
        // }, 300)
      }
    })
  },

  // toast
  showToast: function (title, icon = 'none') {
    wx.showToast({
      title: title || '暂无提示',
      icon,
    })
  },
})